error_log stderr debug;

proxy_buffer_size   16k;
proxy_buffers   4 32k;
proxy_busy_buffers_size   32k;

upstream submit {
    server 127.0.0.1:8001;
}

upstream auth {
    server 127.0.0.1:8002;
}

server {
    listen      8000;
    charset     utf-8;
    client_max_body_size 60M;

    error_page 401 @401_json;
    error_page 403 @403_json;
    error_page 405 @405_json;

    location @401_json {
        default_type application/json;
        return 403 '{\n\t"reason": "Credentials not provided, or expired."\n}\n';
    }

    location @403_json {
        default_type application/json;
        return 403 '{\n\t"reason": "Provided credentials are malformed or invalid."\n}\n';
    }

    location @405_json {
        default_type application/json;
        return 405 '{\n\t"reason": "Method not allowed at this endpoint."\n}\n';
    }

    location /authenticator {
        proxy_pass http://authenticator:8000/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

    location /api {
        auth_request /authenticator;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_token $upstream_http_authorization;
        proxy_pass  http://registry:8000;
        proxy_set_header Authorization $auth_token;
        proxy_set_header X-Request-ID $request_id;
        proxy_pass_request_headers on;
    }

    location /user {
        auth_request /authenticator;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_token $upstream_http_authorization;
        proxy_pass  http://accounts:8000;
        proxy_set_header Authorization $auth_token;
        proxy_set_header X-Request-ID $request_id;
        proxy_pass_request_headers on;
    }

    location /submission {
        auth_request /authenticator;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_token $upstream_http_authorization;
        proxy_pass  http://metadata:8000;
        proxy_set_header Authorization $auth_token;
        proxy_set_header X-Request-ID $request_id;
        proxy_pass_request_headers on;
    }

    # location /upload {
    #     auth_request /authenticator;
    #     auth_request_set $auth_status $upstream_status;
    #     auth_request_set $auth_token $upstream_http_authorization;
    #     proxy_pass  http://filemanager:8000/filemanager/api;
    #     proxy_set_header Authorization $auth_token;
    #     proxy_set_header X-Request-ID $request_id;
    #     proxy_pass_request_headers on;
    # }
}
